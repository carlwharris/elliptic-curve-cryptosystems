% Find the order and all the elements generated by base point 'q' on curve
% 'curve'.
function GenerateSubgroupElements(Subgroup, EllipticCurve)

% Create the 'elements' array which will hold all the elements in the
% subgroup and set the initial 'currPoint' value to the base point
elements = zeros(0,2);
currPoint = Subgroup.BasePoint;

fprintf(['\nThe eliptic curve y^2 = x^3 + %0.0fx',...
         '+ %0.0f mod %0.0f has order %0.0f.'], EllipticCurve.a, ...
         EllipticCurve.b, ...
         EllipticCurve.p, EllipticCurve.Order);
fprintf(['\nBase point (%0.0f, %0.0f), generate the following subgroup:', ...
         '\n\n'], Subgroup.BasePoint(1), Subgroup.BasePoint(2))
     
fprintf('\t0P = 0(%0.0f, %0.0f) = 0\n',  Subgroup.BasePoint(1), ...
        Subgroup.BasePoint(2));
    
% While the point at infinity has not been reached, add 'currPoint' and the 
% base point.
i = 1;
while ~isnan(currPoint)
    elements = [elements; currPoint];
    fprintf('\t%0.0fP = %0.0f(%0.0f, %0.0f) = (%0.0f, %0.0f)\n',  i, i, ...
            Subgroup.BasePoint(1), Subgroup.BasePoint(2), currPoint(1), ...
            currPoint(2));
    currPoint = AddPoints(currPoint, Subgroup.BasePoint, EllipticCurve);
    i = i + 1;
end
fprintf('\t%0.0fP = %0.0f(%0.0f, %0.0f) = 0\n',  i, i, ...
        Subgroup.BasePoint(1), Subgroup.BasePoint(2));

order = size(elements,1)+1;
mult = EllipticCurve.Order / order;
fprintf(['\nThis subgroup has %0.0f elements, which is a multiple of the', ...
         'order of the parent group (%0.0f/%0.0f = %0.0f)\n'], order, ...
         EllipticCurve.Order, order, mult);
% Return the order of the subgroup and all of its elements
end
