% Find the divisors of the elliptic curve's order and test them sequentially
% to see if n(Subgroup.BasePoint) = 0 and output the results. If 
% n(Subgroup.BasePoint), record the lowest value of n for which this is true
% and note this is the order of the subgroup generated by the base point.
function TestDivisors(Subgroup, EllipticCurve)
orderDivisors = divisors(EllipticCurve.Order);

fprintf('The divisors of %0.0f are:', EllipticCurve.Order);
for i = 1:length(orderDivisors)-1
    fprintf(' %0.0f,', orderDivisors(i));
end
fprintf(' and %0.0f.\n', orderDivisors(end))

fprintf('The results of their scalar multiplication is: \n\n')
lowestDivisor = nan;
for i = 1:length(orderDivisors)
    n = orderDivisors(i);
    basePoint = Subgroup.BasePoint;
    p = Subgroup.BasePoint;

    [p, isZero] = IsZeroMultiplication(basePoint, p, n, EllipticCurve);

    if isZero
        fprintf('%0.0f(%0.0f, %0.0f) = %0.0f\n', n, basePoint(1), basePoint(2), p);
        if isnan(lowestDivisor)
            lowestDivisor = n;
        end
        break
    else
        fprintf('%0.0f(%0.0f, %0.0f) = (%0.0f, %0.0f)\n', n, basePoint(1), ...
                basePoint(2), p(1), p(2));
    end
end

fprintf('\nThe lowest value, n, for which n(%0.0f, %0.0f) = 0 is %0.0f.', ...
    basePoint(1), basePoint(2), lowestDivisor)
fprintf(['\nTherefore, the order of the subgroup generated by ',...
         '(%0.0f, %0.0f) is %0.0f\n'], basePoint(1), basePoint(2), ...
         lowestDivisor)
end
