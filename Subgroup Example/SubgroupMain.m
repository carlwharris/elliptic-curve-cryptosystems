%% PART 1: CREATE AN ELLIPTIC CURVE
% Create an elliptic curve in the form y^2 = x^3 + ax + b mod p, where
% a is 'EllipticCurve.a', b is 'EllipticCurve.b', and p is the 'primeNo'th
% prime number. The default curve is y^2 = x^3 + -x + 3 mod 37.
EllipticCurve = struct;
EllipticCurve.a = -1;
EllipticCurve.b = 3;
EllipticCurve.p = 37;
EllipticCurve.Order = 42;

%% PART 2: TEST ELLIPTIC CURVE DIVISORS TO FIND SUBGROUP ORDER
% Using the point, p = 'Subgroup.BasePoint', test each divisor, d, of 
% 'EllipticCurve.Order' to see if pd = 0. The lowest d for which this occurs
% is the order of the subgroup. The default base point for 
% y^2 = x^3 + -x + 3 mod 37 is (2,3).
Subgroup.BasePoint = [2 3];
TestDivisors(Subgroup, EllipticCurve);

%% PART 3: RETURN THE ELEMENTS IN THE SUBGROUP
% Do a naive search and return all the elements generated by the base
% point and the order of the subgroup generated by the base point (this
% implementation for finding the subgroup order is very inefficient, see
% Schoof's algorithm for a feasible implementation for more complex curves).
GenerateSubgroupElements(Subgroup, EllipticCurve);